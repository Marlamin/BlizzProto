import "bgs/low/pb/client/entity_types.proto";

package bgs.protocol;

option optimize_for = CODE_SIZE;
option java_package = "bnet.protocol";
option java_outer_classname = "InvitationTypesProto";

message Invitation {
	required fixed64 id = 1;
	required .bgs.protocol.Identity inviter_identity = 2;
	required .bgs.protocol.Identity invitee_identity = 3;
	optional string inviter_name = 4;
	optional string invitee_name = 5;
	optional string invitation_message = 6;
	optional uint64 creation_time = 7;
	optional uint64 expiration_time = 8;

	extensions 100 to 10000;
}

message InvitationSuggestion {
	optional .bgs.protocol.EntityId channel_id = 1;
	required .bgs.protocol.EntityId suggester_id = 2;
	required .bgs.protocol.EntityId suggestee_id = 3;
	optional string suggester_name = 4;
	optional string suggestee_name = 5;
}

message InvitationTarget {
	optional .bgs.protocol.Identity identity = 1;
	optional string email = 2;
	optional string battle_tag = 3;

	extensions 100 to 10000;
}

message InvitationParams {
	optional string invitation_message = 1;
	optional uint64 expiration_time = 2 [default = 0];

	extensions 100 to 10000;
}

message SendInvitationRequest {
	optional .bgs.protocol.Identity agent_identity = 1;
	required .bgs.protocol.EntityId target_id = 2 [deprecated = true];
	required .bgs.protocol.InvitationParams params = 3;
	optional .bgs.protocol.AccountInfo agent_info = 4;
	optional .bgs.protocol.InvitationTarget target = 5;
}

message SendInvitationResponse {
}

message UpdateInvitationRequest {
	optional .bgs.protocol.Identity agent_identity = 1;
	required fixed64 invitation_id = 2;
	required .bgs.protocol.InvitationParams params = 3;
}

message GenericInvitationRequest {
	optional .bgs.protocol.EntityId agent_id = 1;
	optional .bgs.protocol.EntityId target_id = 2;
	required fixed64 invitation_id = 3;
	optional string invitee_name = 4;
	optional string inviter_name = 5;
	repeated uint32 previous_role = 6 [packed = true];
	repeated uint32 desired_role = 7 [packed = true];
	optional uint32 reason = 8;
}
